{"version":3,"sources":["../../../../client/app/account/signup/signup.controller.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;AAEb,CAAC,YAAW;MAEJ,gBAAgB,GAGT,SAHP,gBAAgB,CAGR,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAC,IAAI,EAAE,OAAO,EAAE;0BAHrE,gBAAgB;;AAIlB,UAAM,CAAC,IAAI,GAAG,EAAE,CAAC;AACjB,UAAM,CAAC,MAAM,GAAG,EAAE,CAAC;AACnB,UAAM,CAAC,SAAS,GAAG,KAAK,CAAC;;AAEzB,UAAM,CAAC,YAAY,GAAG,YAAU;AAC9B,YAAM,CAAC,SAAS,GAAG,KAAK,CAAC;AACzB,UAAI,CAAC,GAAG,EAAC,KAAK,EAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,EAAC,EAAC,CAAC;AAC3C,YAAM,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAC,UAAS,IAAI,EAAC;AAC7C,YAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAC;AACjB,gBAAM,CAAC,SAAS,GAAG,IAAI,CAAA;AACvB,iBAAO,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAA;SAC9B;OACJ,CAAC,CAAC;KAEL,CAAA;;AAIJ,UAAM,CAAC,QAAQ,GAAG,UAAS,IAAI,EAAE;AAC/B,YAAM,CAAC,SAAS,GAAG,IAAI,CAAC;;AAExB,UAAI,IAAI,CAAC,MAAM,EAAE;AACf,YAAI,CAAC,UAAU,CAAC;AACd,cAAI,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI;AACtB,eAAK,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK;AACxB,kBAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ;SAC/B,CAAC,CACD,IAAI,CAAC,YAAM;;AAEV,gBAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAA;SAClB,CAAC,SACI,CAAC,UAAA,GAAG,EAAI;AACZ,aAAG,GAAG,GAAG,CAAC,IAAI,CAAC;AACf,gBAAM,CAAC,MAAM,GAAG,EAAE,CAAC;;;AAGnB,iBAAO,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,UAAC,KAAK,EAAE,KAAK,EAAK;AAC5C,gBAAI,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;AAC5C,kBAAM,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC;WACtC,CAAC,CAAC;SACJ,CAAC,CAAC;OACJ;KACF,CAAA;GAIA;;AAGH,SAAO,CAAC,MAAM,CAAC,YAAY,CAAC,CAC3B,UAAU,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;CAEjD,CAAA,EAAG,CAAC","file":"signup.controller.js","sourcesContent":["'use strict';\n\n(function() {\n\n  class SignupController {\n\n\n    constructor($http, $scope, $timeout, socket, Auth, $state,User, toaster) {\n      $scope.user = {};\n      $scope.errors = {};\n      $scope.submitted = false;\n      \n      $scope.inputChanged = function(){\n        $scope.duplicate = false;\n        var q = {where:{email: $scope.user.email}};\n        $scope.existingUser = User.query(q,function(data){\n            if(data.length > 0){\n              $scope.duplicate = true\n              console.log($scope.duplicate)\n            }\n        });\n\n     }\n\n\n\n  $scope.register = function(form) {\n    $scope.submitted = true;\n\n    if (form.$valid) {\n      Auth.createUser({\n        name: $scope.user.name,\n        email: $scope.user.email,\n        password: $scope.user.password\n      })\n      .then(() => {\n        // Account created, redirect to home\n        $state.go('home')\n      })\n      .catch(err => {\n        err = err.data;\n        $scope.errors = {};\n\n        // Update validity of form fields that match the mongoose errors\n        angular.forEach(err.errors, (error, field) => {\n          form[field].$setValidity('mongoose', false);\n          $scope.errors[field] = error.message;\n        });\n      });\n    }\n  }\n\n\n    \n  }\n}\n\nangular.module('bhcmartApp')\n.controller('SignupController', SignupController);\n\n})();\n\n\n\n\n\n\n"]}