{"version":3,"sources":["../../../client/components/util/util.service.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,CAAC,YAAW;;;;;AAKV,WAAS,WAAW,CAAC,OAAO,EAAE;AAC5B,QAAI,IAAI,GAAG;;;;;;;AAOT,YAAM,EAAA,gBAAC,EAAE,EAAE;AACT,eAAO,AAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,GAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC;OACrD;;;;;;;;AAQD,cAAQ,EAAA,kBAAC,GAAG,EAAE;AACZ,YAAI,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AACpC,SAAC,CAAC,IAAI,GAAG,GAAG,CAAC;AACb,eAAO,CAAC,CAAC;OACV;;;;;;;;;AASD,kBAAY,EAAA,sBAAC,GAAG,EAAE,OAAO,EAAE;AACzB,WAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AACzB,eAAO,GAAG,AAAC,OAAO,IAAI,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,IAAK,EAAE,CAAC;AAChD,eAAO,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACrC,eAAO,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,eAAO,GAAG,OAAO,CAAC,MAAM,CAAC,UAAS,CAAC,EAAE;AACnC,iBAAO,GAAG,CAAC,QAAQ,KAAK,CAAC,CAAC,QAAQ,IAChC,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,IACnB,GAAG,CAAC,QAAQ,KAAK,CAAC,CAAC,QAAQ,CAAC;SAC/B,CAAC,CAAC;AACH,eAAQ,OAAO,CAAC,MAAM,IAAI,CAAC,CAAE;OAC9B;KACF,CAAC;;AAEF,WAAO,IAAI,CAAC;GACb;;AAED,SAAO,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAC9B,OAAO,CAAC,MAAM,EAAE,WAAW,CAAC,CAC5B,MAAM,CAAC,iBAAiB,EAAE,YAAW;AACpC,WAAO,UAAS,KAAK,EAAE,KAAK,EAAE;AAC5B,UAAI,KAAK,EAAE;AACT,aAAK,GAAG,CAAC,KAAK,CAAC;AACf,eAAO,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;OAC3B;AACD,aAAO,EAAE,CAAC;KACX,CAAC;GACH,CAAC,CAAC;CACN,CAAA,EAAG,CAAC","file":"util.service.js","sourcesContent":["'use strict';\n\n(function() {\n\n  /**\n   * The Util service is for thin, globally reusable, utility functions\n   */\n  function UtilService($window) {\n    var Util = {\n      /**\n       * Return a callback or noop function\n       *\n       * @param  {Function|*} cb - a 'potential' function\n       * @return {Function}\n       */\n      safeCb(cb) {\n        return (angular.isFunction(cb)) ? cb : angular.noop;\n      },\n\n      /**\n       * Parse a given url with the use of an anchor element\n       *\n       * @param  {String} url - the url to parse\n       * @return {Object}     - the parsed url, anchor element\n       */\n      urlParse(url) {\n        var a = document.createElement('a');\n        a.href = url;\n        return a;\n      },\n\n      /**\n       * Test whether or not a given url is same origin\n       *\n       * @param  {String}           url       - url to test\n       * @param  {String|String[]}  [origins] - additional origins to test against\n       * @return {Boolean}                    - true if url is same origin\n       */\n      isSameOrigin(url, origins) {\n        url = Util.urlParse(url);\n        origins = (origins && [].concat(origins)) || [];\n        origins = origins.map(Util.urlParse);\n        origins.push($window.location);\n        origins = origins.filter(function(o) {\n          return url.hostname === o.hostname &&\n            url.port === o.port &&\n            url.protocol === o.protocol;\n        });\n        return (origins.length >= 1);\n      }\n    };\n\n    return Util;\n  }\n\n  angular.module('bhcmartApp.util')\n    .factory('Util', UtilService)\n    .filter('startSearchFrom', function() {\n      return function(input, start) {\n        if (input) {\n          start = +start;\n          return input.slice(start);\n        }\n        return [];\n      };\n    });\n})();\n"]}