{"version":3,"sources":["../../../../server/api/registry/registry.model.js"],"names":[],"mappings":"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","file":"registry.model.js","sourcesContent":["'use strict';\nvar mongoose = require('bluebird').promisifyAll(require('mongoose'));\nvar Schema = mongoose.Schema;\n\nvar Product = require('../product/product.model').product;\n\nvar RsvpSchema = new Schema({\n  name: {\n    type: String,    \n    trim: true\n  },\n  email: {\n    type: String\n  },\n  phone : {\n    type : Number\n  },\n  attending:  {\n    type: Boolean,\n    default: true\n  },\n  posted: {\n    type: Date,\n    default: Date.now\n  },\n  registryId : {\n    type: String\n  }\n});\n\nvar GuestBookSchema = new Schema({\n  wishes: {\n    type: String\n  },\n  by: {\n    type: String\n  },\n  posted: {\n    type: Date,\n    default: Date.now\n  },\n  registryId : {\n    type: String\n  }\n});\n\nvar ContributionsSchema = new Schema({\n  name: {\n    type: String\n  },\n  productId: {\n    type: String\n  },\n  contribution: {\n    type: Number\n  },\n   registryId : {\n    type: String\n  },\n  paymentid : {\n    type: String\n  },\n  vouchers: [{\n    type: Schema.Types.ObjectId,\n    ref: 'Voucher'\n  }]\n});\n\nvar AccomodationSchema = new Schema({\n  name: {\n    type: String\n  },\n  address: {\n    type: String\n  },\n  email: {\n    type: String\n  },\n  phone : {\n    type : Number\n  },\n  website : {\n    type : String\n  },\n  posted: {\n    type: Date,\n    default: Date.now\n  },\n  registryId : {\n    type: String\n  }\n});\n\nvar RegistrySchema = new Schema({\n  title: {\n    type: String\n  },\n  username: {\n    type: String\n  },\n  date: {\n    type: Date, \n    default: Date.now\n  },\n  location: {\n    type: String\n  },\n  type: {\n    type: String\n  },\n  greeting: {\n    type: String\n  },\n  thankyou: {\n    type: String\n  },\n  youfirstName: {\n    type: String\n  },\n  yousecondName: {\n    type: String\n  },\n  firstName : {\n    type: String\n  },\n  secondName : {\n    type: String\n  },\n  theme :{\n    type: String\n  },\n  profileImageUrl : {\n    type: String\n  },\n  visible : {\n    type: Boolean,\n    default: false\n  },\n  products : [{\n    _id: { type: String }, \n    name: String, \n    slug: String,\n    imageUrl : String,\n    price : Number,\n    desired: {\n      type: Number,\n      min: 1,\n      default : 1\n    },\n    required: {\n      type: Number,\n      min: 0,\n      default : 0\n    },\n    prodcode: {\n      type: String\n    },\n    linkId : {\n      type: String\n    },\n    affiliate : {\n      type: Boolean,\n      default: false\n    },\n    custom : {\n      type: Boolean,\n      default: false\n    },\n    multiple : {\n      type: Boolean,\n      default: false\n    },\n    description: {\n     type: String \n    },\n    paid: {\n      type: Number,\n      default: 0\n    },\n    size : {\n      type : String\n    },\n    color : {\n      type : String\n    }\n\n\n\n  }]\n\n}, { versionKey: false }).index({\n  'title': 'text'\n});\n\n\nmodule.exports = {\n  registry: mongoose.model('Registry', RegistrySchema),\n  rsvp: mongoose.model('Rsvp', RsvpSchema),\n  guestBook : mongoose.model('GuestBook', GuestBookSchema),\n  contribution: mongoose.model('Contribution', ContributionsSchema),\n  accomodation: mongoose.model('Accomodation', AccomodationSchema)\n}\n"]}