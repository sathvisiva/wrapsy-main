{"version":3,"sources":["../../../../server/api/registry/registry.model.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;AACb,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;AACrE,IAAI,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;;AAE7B,IAAI,OAAO,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC,OAAO,CAAC;;AAE1D,IAAI,UAAU,GAAG,IAAI,MAAM,CAAC;AAC1B,MAAI,EAAE;AACJ,QAAI,EAAE,MAAM;;AAEZ,QAAI,EAAE,IAAI;GACX;AACD,OAAK,EAAE;AACL,QAAI,EAAE,MAAM;GACb;AACD,OAAK,EAAG;AACN,QAAI,EAAG,MAAM;GACd;AACD,WAAS,EAAG;AACV,QAAI,EAAE,OAAO;AACb,eAAS,IAAI;GACd;AACD,QAAM,EAAE;AACN,QAAI,EAAE,MAAM;AACZ,OAAG,EAAE,CAAC;AACN,OAAG,EAAE,EAAE;GACR;AACD,QAAM,EAAE;AACN,QAAI,EAAE,IAAI;AACV,eAAS,IAAI,CAAC,GAAG;GAClB;AACD,YAAU,EAAG;AACX,QAAI,EAAE,MAAM;GACb;CACF,CAAC,CAAC;;AAGH,IAAI,cAAc,GAAG,IAAI,MAAM,CAAC;AAC9B,OAAK,EAAE;AACL,QAAI,EAAE,MAAM;GACb;AACD,UAAQ,EAAE;AACR,QAAI,EAAE,MAAM;GACb;AACD,MAAI,EAAE;AACJ,QAAI,EAAE,IAAI;AACV,eAAS,IAAI,CAAC,GAAG;GAClB;AACD,UAAQ,EAAE;AACR,QAAI,EAAE,MAAM;GACb;AACD,MAAI,EAAE;AACJ,QAAI,EAAE,MAAM;GACb;AACD,UAAQ,EAAE;AACR,QAAI,EAAE,MAAM;GACb;AACD,cAAY,EAAE;AACZ,QAAI,EAAE,MAAM;GACb;AACD,eAAa,EAAE;AACb,QAAI,EAAE,MAAM;GACb;AACD,WAAS,EAAG;AACV,QAAI,EAAE,MAAM;GACb;AACD,YAAU,EAAG;AACX,QAAI,EAAE,MAAM;GACb;AACD,oBAAkB,EAAE;AAClB,QAAI,EAAE,MAAM;GACb;AACD,iBAAe,EAAG;AAChB,QAAI,EAAE,MAAM;GACb;AACD,SAAO,EAAG;AACR,QAAI,EAAE,OAAO;AACb,eAAS,KAAK;GACf;AACD,UAAQ,EAAG,CAAC;AACV,OAAG,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE;AACnC,QAAI,EAAE,MAAM;AACZ,QAAI,EAAE,MAAM;AACZ,YAAQ,EAAG,MAAM;AACjB,SAAK,EAAG,MAAM;AACd,WAAO,EAAE;AACT,UAAI,EAAE,MAAM;AACZ,SAAG,EAAE,CAAC;KACP;AACD,YAAQ,EAAE;AACR,UAAI,EAAE,MAAM;AACZ,SAAG,EAAE,CAAC;KACP;;GAEA,CAAC;;CAEH,EAAE,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC;AAC9B,SAAO,EAAE,MAAM;CAChB,CAAC,CAAC;;AAGH,MAAM,CAAC,OAAO,GAAG;AACf,UAAQ,EAAE,QAAQ,CAAC,KAAK,CAAC,UAAU,EAAE,cAAc,CAAC;AACpD,MAAI,EAAE,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC;CACzC,CAAA","file":"registry.model.js","sourcesContent":["'use strict';\nvar mongoose = require('bluebird').promisifyAll(require('mongoose'));\nvar Schema = mongoose.Schema;\n\nvar Product = require('../product/product.model').product;\n\nvar RsvpSchema = new Schema({\n  name: {\n    type: String,\n    \n    trim: true\n  },\n  email: {\n    type: String\n  },\n  phone : {\n    type : Number\n  },\n  attending:  {\n    type: Boolean,\n    default: true\n  },\n  people: {\n    type: Number,\n    min: 1,\n    max: 10\n  },\n  posted: {\n    type: Date,\n    default: Date.now\n  },\n  registryId : {\n    type: String\n  }\n});\n\n\nvar RegistrySchema = new Schema({\n  title: {\n    type: String\n  },\n  username: {\n    type: String\n  },\n  date: {\n    type: Date, \n    default: Date.now\n  },\n  location: {\n    type: String\n  },\n  type: {\n    type: String\n  },\n  greeting: {\n    type: String\n  },\n  youfirstName: {\n    type: String\n  },\n  yousecondName: {\n    type: String\n  },\n  firstName : {\n    type: String\n  },\n  secondName : {\n    type: String\n  },\n  backgroundImageUrl :{\n    type: String\n  },\n  profileImageUrl : {\n    type: String\n  },\n  visible : {\n    type: Boolean,\n    default: false\n  },\n  products : [{\n    _id: { type: String, unique: true }, \n    name: String, \n    slug: String,\n    imageUrl : String,\n    price : Number,\n    desired: {\n    type: Number,\n    min: 0\n  },\n  required: {\n    type: Number,\n    min: 0\n  }\n\n  }]\n\n}, { versionKey: false }).index({\n  'title': 'text'\n});\n\n\nmodule.exports = {\n  registry: mongoose.model('Registry', RegistrySchema),\n  rsvp: mongoose.model('Rsvp', RsvpSchema)\n}\n"]}