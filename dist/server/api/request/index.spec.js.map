{"version":3,"sources":["../../../../server/api/request/index.spec.js"],"names":[],"mappings":"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","file":"index.spec.js","sourcesContent":["'use strict';\n\nvar proxyquire = require('proxyquire').noPreserveCache();\n\nvar requestCtrlStub = {\n  index: 'requestCtrl.index',\n  show: 'requestCtrl.show',\n  create: 'requestCtrl.create',\n  update: 'requestCtrl.update',\n  destroy: 'requestCtrl.destroy'\n};\n\nvar routerStub = {\n  get: sinon.spy(),\n  put: sinon.spy(),\n  patch: sinon.spy(),\n  post: sinon.spy(),\n  delete: sinon.spy()\n};\n\n// require the index with our stubbed out modules\nvar requestIndex = proxyquire('./index.js', {\n  'express': {\n    Router: function() {\n      return routerStub;\n    }\n  },\n  './request.controller': requestCtrlStub\n});\n\ndescribe('Request API Router:', function() {\n\n  it('should return an express router instance', function() {\n    expect(requestIndex).to.equal(routerStub);\n  });\n\n  describe('GET /api/requests', function() {\n\n    it('should route to request.controller.index', function() {\n      expect(routerStub.get\n        .withArgs('/', 'requestCtrl.index')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('GET /api/requests/:id', function() {\n\n    it('should route to request.controller.show', function() {\n      expect(routerStub.get\n        .withArgs('/:id', 'requestCtrl.show')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('POST /api/requests', function() {\n\n    it('should route to request.controller.create', function() {\n      expect(routerStub.post\n        .withArgs('/', 'requestCtrl.create')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('PUT /api/requests/:id', function() {\n\n    it('should route to request.controller.update', function() {\n      expect(routerStub.put\n        .withArgs('/:id', 'requestCtrl.update')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('PATCH /api/requests/:id', function() {\n\n    it('should route to request.controller.update', function() {\n      expect(routerStub.patch\n        .withArgs('/:id', 'requestCtrl.update')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('DELETE /api/requests/:id', function() {\n\n    it('should route to request.controller.destroy', function() {\n      expect(routerStub.delete\n        .withArgs('/:id', 'requestCtrl.destroy')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n});\n"]}