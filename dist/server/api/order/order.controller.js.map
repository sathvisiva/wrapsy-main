{"version":3,"sources":["../../../../server/api/order/order.controller.js"],"names":[],"mappings":"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","file":"order.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/orders              ->  index\n * POST    /api/orders              ->  create\n * GET     /api/orders/:id          ->  show\n * PUT     /api/orders/:id          ->  update\n * DELETE  /api/orders/:id          ->  destroy\n */\n\n 'use strict';\n\n import _ from 'lodash';\n var Order = require('./order.model');\n var Product = require('../product/product.model').product;\n var Registry = require('../registry/registry.model').registry;\n var Registrycontroller = require('../registry/registry.controller');\n\n function isJson(str) {\n  try {\n    str = JSON.parse(str);\n  } catch (e) {\n    str = str;\n  }\n  return str\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    console.log(err)\n    res.status(statusCode).send(err);\n  };\n}\n\nfunction responseWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction saveUpdates(updates) {\n  return function(entity) {\n\n    var updated = entity;\n    updated.delivered = true\n    return updated.saveAsync()\n    .spread(updated => {\n      return updated;\n    });\n  };\n}\n\nfunction saveCancelUpdates(updates) {\n  return function(entity) {\n\n    var updated = entity;\n    updated.cancel = true\n    return updated.saveAsync()\n    .spread(updated => {\n      return updated;\n    });\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if (entity) {\n      return entity.removeAsync()\n      .then(() => {\n        res.status(204).end();\n      });\n    }\n  };\n}\n\n// Gets a list of Orders\nexport function index(req, res) {\n  Order.findAsync()\n  .then(responseWithResult(res))\n  .catch(handleError(res));\n\n  \n}\n\n// Gets a list of user Orders\nexport function myOrders(req, res) {\n  console.log(req.params.id)\n  Order.findAsync({ customerId: req.params.id })\n  .then(responseWithResult(res))\n  .catch(handleError(res));\n}\n\n// Gets a single Order from the DB\nexport function show(req, res) {\n  Order.findByIdAsync(req.params.id)\n  .then(handleEntityNotFound(res))\n  .then(responseWithResult(res))\n  .catch(handleError(res));\n}\n\nexports.countorders = function(req, res) {\n  /*Order.find().count()\n  .then(responseWithResult(res))\n  .catch(handleError(res));*/\n  \n    \n  if(req.body){\n    \n    \n    var q = isJson(req.query.where);\n    Order.find(q).exec(function (err, count) {\n      if(err) { \n        console.log(err)\n        return handleError(res, err); }\n          console.log(count);\n        return res.status(200).json([{count:count}]);\n      });\n  }else{\n    Order.find().count().exec(function (err, count) {\n      if(err) { \n        console.log(err)\n        return handleError(res, err); }\n        return res.status(200).json([{count:count}]);\n      });\n  }\n};\n\n// Creates a new Order in the DB\nexport function create(req, res) {\n  console.log(req.body)\n  \n  Order.createAsync(req.body)\n  .then(entity => {\n    if (entity) {\n      _.each(entity.items, function(i) {\n        Product.findByIdAsync(i.productId)\n        .then(function(product) {\n          product.stock -= i.quantity;\n          product.saveAsync();\n        });\n        if(i.registry){\n          Registrycontroller.updateRegistryProduct(i.registry,i.productId,i.quantity, req.body.customerEmail, req.body.customerName)\n        }\n      })\n      res.status(201).json(entity);\n    }\n  })\n  .catch(handleError(res));\n}\n\n// Updates an existing Order in the DB\nexport function update(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  Order.findByIdAsync(req.params.id)\n  .then(handleEntityNotFound(res))\n  .then(saveUpdates(req.body))\n  .then(responseWithResult(res))\n  .catch(handleError(res));\n}\n\nexport function updateCancel(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  Order.findByIdAsync(req.params.id)\n  .then(handleEntityNotFound(res))\n  .then(saveCancelUpdates(req.body))\n  .then(responseWithResult(res))\n  .catch(handleError(res));\n}\n\n// Deletes a Order from the DB\nexport function destroy(req, res) {\n  Order.findByIdAsync(req.params.id)\n  .then(handleEntityNotFound(res))\n  .then(removeEntity(res))\n  .catch(handleError(res));\n}\n\n\n"]}