{"version":3,"sources":["../../../../server/api/catalog/catalog.integration.js"],"names":[],"mappings":"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","file":"catalog.integration.js","sourcesContent":["'use strict';\n\nvar app = require('../..');\nvar request = require('supertest');\n\nvar newCatalog;\n\ndescribe('Catalog API:', function() {\n\n  describe('GET /api/catalogs', function() {\n    var catalogs;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/catalogs')\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          catalogs = res.body;\n          done();\n        });\n    });\n\n    it('should respond with JSON array', function() {\n      expect(catalogs).to.be.instanceOf(Array);\n    });\n\n  });\n\n  describe('POST /api/catalogs', function() {\n    beforeEach(function(done) {\n      request(app)\n        .post('/api/catalogs')\n        .send({\n          name: 'New Catalog',\n        })\n        .expect(201)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          newCatalog = res.body;\n          done();\n        });\n    });\n\n    it('should respond with the newly created catalog', function() {\n      expect(newCatalog.name).to.equal('New Catalog');\n    });\n\n  });\n\n  describe('GET /api/catalogs/:id', function() {\n    var catalog;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/catalogs/' + newCatalog._id)\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          catalog = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      catalog = {};\n    });\n\n    it('should respond with the requested catalog', function() {\n      expect(catalog.name).to.equal('New Catalog');\n    });\n\n  });\n\n  describe('PUT /api/catalogs/:id', function() {\n    var updatedCatalog\n\n    beforeEach(function(done) {\n      request(app)\n        .put('/api/catalogs/' + newCatalog._id)\n        .send({\n          name: 'Updated Catalog',\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          updatedCatalog = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      updatedCatalog = {};\n    });\n\n    it('should respond with the updated catalog', function() {\n      expect(updatedCatalog.name).to.equal('Updated Catalog');\n    });\n\n  });\n\n  describe('DELETE /api/catalogs/:id', function() {\n\n    it('should respond with 204 on successful removal', function(done) {\n      request(app)\n        .delete('/api/catalogs/' + newCatalog._id)\n        .expect(204)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n    it('should respond with 404 when catalog does not exist', function(done) {\n      request(app)\n        .delete('/api/catalogs/' + newCatalog._id)\n        .expect(404)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n  });\n\n});\n"]}