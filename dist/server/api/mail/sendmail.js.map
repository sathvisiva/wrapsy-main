{"version":3,"sources":["../../../../server/api/mail/sendmail.js"],"names":[],"mappings":";;;;;;AAAA,IAAM,UAAU,GAAG,OAAO,CAAC,YAAY,CAAC;IAExC,WAAW,GAAG,UAAU,CAAC,eAAe,CAAC;AACvC,MAAI,EAAE,eAAe;AACrB,MAAI,EAAE,GAAG;AACP,QAAM,EAAE,IAAI;AACZ,MAAI,EAAE;AACJ,QAAI,EAAE,sBAAsB;AAC5B,QAAI,EAAE,YAAY;GACnB;CACF,CAAC;IACJ,aAAa,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC,aAAa;IACxD,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC;IACtB,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;;;;AAK9B,SAAS,SAAS,CAAE,GAAG,EAAE;AACvB,SAAO,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;CAClC;;AAED,SAAS,YAAY,CAAE,YAAY,EAAE,QAAQ,EAAE;AAC7C,MAAI,QAAQ,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC,CAAC;AAClF,SAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAC,OAAO,EAAK;AAC3C,WAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM,EAAK;AACtC,cAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,UAAC,GAAG,EAAE,MAAM,EAAK;AACxC,YAAI,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,KAChB,OAAO,CAAC;AACX,eAAK,EAAE,MAAM;AACb,iBAAO,EAAP,OAAO;SACR,CAAC,CAAC;OACJ,CAAC,CAAC;KACJ,CAAC,CAAC;GACJ,CAAC,CAAC,CAAC;CACL;;AAEM,SAAS,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE;AACpC,SAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;;AAElB,cAAY,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,OAAO,EAAK;AAC1C,WAAO,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,UAAC,MAAM,EAAK;AACzC,eAAS,CAAC;AACR,UAAE,EAAE,MAAM,CAAC,OAAO,CAAC,KAAK;AACxB,YAAI,EAAE,iCAAiC;AACvC,eAAO,EAAE,MAAM,CAAC,KAAK,CAAC,OAAO;AAC7B,YAAI,EAAE,MAAM,CAAC,KAAK,CAAC,IAAI;AACvB,YAAI,EAAE,MAAM,CAAC,KAAK,CAAC,IAAI;OACxB,CAAC,CAAC;KACJ,CAAC,CAAC,CAAC;GACL,CAAC,CAAC,IAAI,CAAC,YAAM;AACZ,WAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;GAC7B,CAAC,CAAC;CACJ","file":"sendmail.js","sourcesContent":["const nodemailer = require('nodemailer'),\n\ntransporter = nodemailer.createTransport({\n  host: 'smtp.zoho.com',\n  port: 465,\n    secure: true, // use SSL\n    auth: {\n      user: 'admin@wrapsytest.com',\n      pass: 'SS@thTinku'\n    }\n  }),\nEmailTemplate = require('email-templates').EmailTemplate,\npath = require('path'),\nPromise = require('bluebird');\n\n// Thank you!\n\n\nfunction sendEmail (obj) {\n  return transporter.sendMail(obj);\n}\n\nfunction loadTemplate (templateName, contexts) {\n  let template = new EmailTemplate(path.join(__dirname, 'templates', templateName));\n  return Promise.all(contexts.map((context) => {\n    return new Promise((resolve, reject) => {\n      template.render(context, (err, result) => {\n        if (err) reject(err);\n        else resolve({\n          email: result,\n          context,\n        });\n      });\n    });\n  }));\n}\n\nexport function sendmail(templ, data) {\n  console.log(data);\n\n  loadTemplate(templ, data).then((results) => {\n    return Promise.all(results.map((result) => {\n      sendEmail({\n        to: result.context.email,\n        from: '\"Wrapsy\" <admin@wrapsytest.com>',\n        subject: result.email.subject,\n        html: result.email.html,\n        text: result.email.text,\n      });\n    }));\n  }).then(() => {\n    console.log('Message Sent');\n  });\n}\n"]}