{"version":3,"sources":["../../../server/config/seed.js"],"names":[],"mappings":"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","file":"seed.js","sourcesContent":["/**\n * Populate DB with sample data on server start\n * to disable, edit config/environment/index.js, and set `seedDB: false`\n */\n\n'use strict';\nimport _ from 'lodash';\nvar Thing = require('../api/thing/thing.model');\nvar User = require('../api/user/user.model');\nvar Product = require('../api/product/product.model').product;\nvar Variant = require('../api/product/product.model').variant;\nvar Review = require('../api/product/product.model').review;\nvar Image = require('../api/product/product.model').image;\nvar Catalog = require('../api/catalog/catalog.model');\nimport mongoose from 'mongoose';\n\n\n\nvar users = require('../data/users.json');\nvar catalogs = require('../data/catalogs.json');\nvar variants = require('../data/variants.json');\nvar images = require('../data/images.json');\nvar reviews = require('../data/reviews.json');\nvar products = require('../data/products.json');\n\nThing.find({}).removeAsync()\n  .then(() => {\n    Thing.create({\n        name: 'Development Tools',\n        info: 'Integration with popular tools such as Bower, Grunt, Babel, Karma, ' +\n          'Mocha, JSHint, Node Inspector, Livereload, Protractor, Jade, ' +\n          'Stylus, Sass, and Less.'\n      }, {\n        name: 'Server and Client integration',\n        info: 'Built with a powerful and fun stack: MongoDB, Express, ' +\n          'AngularJS, and Node.'\n      }, {\n        name: 'Smart Build System',\n        info: 'Build system ignores `spec` files, allowing you to keep ' +\n          'tests alongside code. Automatic injection of scripts and ' +\n          'styles into your index.html'\n      }, {\n        name: 'Modular Structure',\n        info: 'Best practice client and server structures allow for more ' +\n          'code reusability and maximum scalability'\n      }, {\n        name: 'Optimized Build',\n        info: 'Build process packs up your templates as a single JavaScript ' +\n          'payload, minifies your scripts/css/img, and rewrites asset ' +\n          'names for caching.'\n      }, {\n        name: 'Deployment Ready',\n        info: 'Easily deploy your app to Heroku or Openshift with the heroku ' +\n          'and openshift subgenerators'\n      })\n      .then(() => {\n        console.log('finished populating dummy data');\n      });\n  });\n\n/*var e = []\nvar d = []\nfor (var i = 10; i >= 0; i--) {\n  var a = {\n    _id: mongoose.Types.ObjectId(),\n    title: \"Test Review \" + i + 1,\n    content: \"uild process packs \",\n    by: users[Math.floor(Math.random() * 1)]._id,\n    rating: 1 + Math.ceil(Math.random() * 4)\n  }\n  e.push(a)\n  d.push(a._id)\n};\n\nconsole.log(e)\nconsole.log(d)*/\n\nUser.find({}).removeAsync()\n  .then(() => {\n    _.each(users, function(user) {\n      User.create(user);\n    })\n  })\n  .then(() => {\n    console.log('finished populating users');\n  });\n\nCatalog.find({}).removeAsync()\n  .then(() => {\n    _.each(catalogs, function(catalog) {\n      Catalog.create(catalog);\n    })\n  }).then(() => {\n    console.log('finished populating catalogs');\n  });\n\nVariant.find({}).removeAsync()\n  .then(() => {\n    _.each(variants, function(variant) {\n      Variant.create(variant);\n    })\n  }).then(() => {\n    console.log('finished populating variants ');\n  });\n\nImage.find({}).removeAsync()\n  .then(() => {\n    _.each(images, function(image) {\n      Image.create(image);\n    })\n  }).then(() => {\n    console.log('finished populating images');\n  });\n\nReview.find({}).removeAsync()\n  .then(() => {\n    _.each(reviews, function(review) {\n      Review.create(review);\n    })\n  }).then(() => {\n    console.log('finished populating reviews');\n  });\n\nProduct.find({}).removeAsync()\n  .then(() => {\n    _.each(products, function(product) {\n      Product.create(product);\n    })\n  }).then(() => {\n    console.log('finished populating products');\n  });\n"]}